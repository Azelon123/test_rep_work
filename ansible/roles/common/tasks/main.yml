---
- name: Set timezone to UTC
  ansible.builtin.raw: timedatectl set-timezone UTC
  changed_when: false

- name: Remove default user "{{ default_user_to_remove }}" (ignore errors if not exists)
  ansible.builtin.user:
    name: "{{ default_user_to_remove }}"
    state: absent
  ignore_errors: true

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
  register: apt_update

- name: Install base dependencies
  ansible.builtin.apt:
    pkg:
      - libfreetype6
      - libfreetype6-dev
      - zlib1g
      - zlib1g-dev
      - libxml2
      - libxml2-dev
      - libxslt1-dev
      - libxslt1.1
      - gcc
      - curl
      - make
      - libcurl4-openssl-dev
      - libssl-dev
      - mc
      - wget
      - aptitude
      - unzip
      - htop
      - nload
      - libffi-dev
      - gnupg2
      - pkg-config
      - tcl
      - git
      - sendmail
      - openssl
      - python-setuptools
      - screen
      - ethtool
      - openssl
      - nodejs
      - npm
    state: present
    update_cache: yes
  when: apt_update is succeeded

- name: Configure parameters (sysctl)
  ansible.builtin.blockinfile:
    path: /etc/sysctl.conf
    block: |
      net.ipv4.ip_local_port_range = 1024 65535
      fs.nr_open = 2000000
      fs.file-max = 5000000
    marker: "# Ansible-managed block common role"
  notify: Reload sysctl

- name: Update systemd config
  ansible.builtin.lineinfile:
    path: /etc/systemd/system.conf
    regexp: '^#?DefaultLimitNOFILE='
    line: 'DefaultLimitNOFILE=6500535'

- name: Copy limits config from template
  ansible.builtin.template:
    src: limits.conf.j2
    dest: /etc/security/limits.conf
    owner: root
    group: root
    mode: '0644'

- name: Create deploy user (if not exists)
  ansible.builtin.user:
    name: "{{ deploy_user }}"
    shell: /bin/bash
    create_home: yes

- name: Create .ssh directory for deploy user
  ansible.builtin.file:
    path: "/home/{{ deploy_user }}/.ssh"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0700'

- name: Copy public key for deploy user
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/files/id_rsa.pub"
    dest: "/home/{{ deploy_user }}/.ssh/authorized_keys"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0600'

- name: Copy  private key
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/files/id_rsa"
    dest: "/home/{{ deploy_user }}/.ssh/id_rsa"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0600'

- name: Create needed directories
  ansible.builtin.file:
    path: /etc/nginx/projects_conf
    state: directory

- name: Create /etc/nginx/projects
  ansible.builtin.file:
    path: /etc/nginx/projects
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0777'

- name: Create /etc/nginx/projects/panels
  ansible.builtin.file:
    path: /etc/nginx/projects/panels
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0777'

- name: Create /var/www/server/frontend/shared/runtime/GeoIP
  ansible.builtin.file:
    path: /var/www/server/frontend/shared/runtime/GeoIP
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0755'
